% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dots.R
\name{dots}
\alias{dots}
\alias{dots_in_env}
\title{Define 'dots' Object}
\usage{
dots(...)

dots_in_env(`*env*`, ...)
}
\arguments{
\item{...}{arguments to gather, can be empty, can contain \code{...}}

\item{*env*}{environment in which to evaluate the dots}
}
\description{
The output is
of type "...", just like the output of \code{get("...")}, but we added a class "dots"
so we could define methods for it. Note that dots are lazy,
their expression is not evaluated at the time of definition.
}
\examples{
dots1 <- dots(a=x, b=y)
dots1

# subset and combine as you would with a vector
dots1[1]
dots1[2:1]
dots1["a"]
dots1[c(FALSE,TRUE)]

# `[[` and `$` evaluate the argument
x <- 2
dots1[["a"]]

dots2 <- dots(c = i + j)
c(dots1, dots2)

f <- function(...) {
  dots3 <- dots(...) # the same
  dots4 <- dots(b = y)
  dots5 <- dots(..., b = y)
  list(
    dots3 = dots2,
    dots4 = dots3,
    dots5 = dots4
  )
}
f(a = x)

}
